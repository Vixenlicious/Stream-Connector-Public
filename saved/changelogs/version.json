{
	"5.4.5": [
		"HOTFIX: Gui dispatcher for new row filtering with heavy avatars."
	],
	"5.4.4": [
		"NEW: Nuclear OSC filtering system implemented for tracking data suppression.",
		"NEW: Fuzzy suffix blocklist added to silently reject invasive OSC suffixes.",
		"IMPROVED: Legacy noisy filter system now loads alongside nuclear filters for layered OSC handling.",
		"INTERNAL: Controls parser now de-dupes noisy parameters against enforced blocklists.",
		"INTERNAL: Added hard filter layer for known tracking prefixes and motion parameters."
	],
	"5.4.3": [
		"FIX: Avatar Controls sometimes not firing correctly.",
		"FIX: TikFinity desync on new avatar imports or loading unregistered avatars.",
		"FIX: Chain registry conflicts when gift-triggered chains re-import improperly.",
		"NEW: Added Chain Controls dropdown to toolbar.",
		"NEW: Added Export and Import Chains buttons under Chain Controls.",
		"NEW: DRM License Check integrated (supports licensed and premium tiers).",
		"IMPROVED: load_avatar_from_path now purges and reloads saved controls before re-rendering UI.",
		"IMPROVED: Registry I/O and TikFinity integration now sync actions and categories cleanly after avatar load.",
		"REMOVED: OneDrive placeholder pinning logic (was unstable on non-standard drives).",
		"NEW: Export directory created at saved/controls/export/ during startup seeding.",
		"INTERNAL: Restructured TikFinity API boot logic for stronger cache validation and recovery after state loss."
	],
	"5.4.2": [
		"FIX: Avatar loader now always saves last_avatar.txt properly after a successful import.",
		"FIX: Controls JSON is now rewritten after load to preserve a hard backup, even if unchanged.",
		"FIX: Legacy or stale control entries no longer overwrite valid avatar control files.",
		"FIX: Forced override addresses (e.g., ::# syntax) are now validated against base OSC paths.",
		"FIX: sanitize_controls no longer drops user-defined parameters like /avatar/change or /tracking/vrsystem.",
		"FIX: Controls merge no longer silently corrupts valid entries when avatar JSON is missing.",
		"FIX: Improved compatibility for OSCQuery parameter matching under fuzzy conditions.",
		"FIX: Better error handling for missing or malformed avatar parameter JSON files.",
		"NEW: sanitize_controls now supports OSCBridge validation + avatar JSON + whitelist path logic.",
		"NEW: Automatic cleanup of invalid controls entries using OSC param cache and avatar source.",
		"NEW: User-injected paths like /chatbox/input are preserved by explicit path whitelist.",
		"NEW: sanitize_controls logs full drop/keep summaries to controls.log for traceability.",
		"IMPROVED: load_avatar_from_path now purges and reloads saved controls before re-rendering UI.",
		"IMPROVED: Avatar control rows are only persisted if successfully validated.",
		"INTERNAL: Moved sanitize_controls to shared helpers to enable chain-level use if needed.",
		"INTERNAL: Restructured validation logic to enable fuzzy override compatibility and cache fallback paths."
	],
	"5.4.1": [
		"FIX: Drag-and-drop chain reordering now reliably updates and persists layout_index in saved files.",
		"FIX: save_chains_force now enforces correct layout ordering based on chain frame position.",
		"FIX: Chain UI now respects layout_index explicitly during regrid, ensuring consistent visual order.",
		"FIX: Resolved rare case where layout_index changes were not saved if hash matched prior snapshot.",
		"FIX: Backups are now created properly even when layout_index is the only change.",
		"FIX: Resolved Issue with chains that are gift triggered not being blocked from Tikfinity listings.",
		"FIX: Extreme edge case where if Tikfinity sent a new gift thats not mapped it does it anyway.",
		"FIX: Chain driven events not detecting in some cases.",
		"FIX: Pishock Api sometimes throwing a popup for whatever reason on broker errors and not being 100% reliable.",
		"FIX: Pishock Api pulsating, decreased the chain offset so they run more tightly together.",
		"FIX: Repeated Gift Chains not firing after X count.",
		"FIX: Filters not loading on the Ui correctly.",
		"FIX: Older Chain Driven Events sometimes throwing a rare edge case value error and not appearing in the Ui anymore.",
		"NEW: Repeat Mode toggle in the Chain Editor, this enables you to allow repeat counts to stack infinitely.",
		"NEW: Added 6 more loggers to the program for each module to help detect and find errors.",
		"NEW: Added Future Support for more features such as if its a Subscriber they get additional things!",
		"IMPROVED: load_chains applies smarter normalization for missing or invalid layout_index values.",
		"INTERNAL: save_chains_force now supports external layout maps for full control over save ordering.",
		"INTERNAL: Removed legacy layout_index bypass checks that blocked drag-save operations.",
		"INTERNAL: Simplified layout tracking logic across UI and chain metadata for better synchronization."
	],
	"5.4.0": [
		"NEW: Drag-and-drop re-arrangeable chain buttons with glow effects on hover.",
		"NEW: Intelligent Filtering system with silent intellisense corrections‚Äîautomatically fixes minor input errors.",
		"NEW: Fixed face tracking data stream edge case causing loss of updates.",
		"NEW: Intelligent Logging for more useful diagnostics with reduced noise.",
		"NEW: Intelligent PiShock Handling for improved session stability and edge-case recovery.",
		"NEW: Improved PiShock API handling with faster reconnections and higher reliability.",
		"NEW: Added buttons in the top-right linking to official project websites.",
		"NEW: Refreshed branding and styling across UI to match new design aesthetic.",
		"NEW: 'Filter Out' option in right-click menu for suppressing noisy OSC parameters via persistent filter.",
		"NEW: Regex-based sanitization for malformed OSC parameters (e.g., addresses starting with '!').",
		"NEW: Improved fuzzy search across OSC paths and visible labels (case-insensitive, token-aware).",
		"FIX: Face tracking data bug patched for stream continuity.",
		"FIX: Better error handling for malformed OSC address edge cases.",
		"IMPROVED: Faster load times for UI initialization and parameter parsing.",
		"IMPROVED: Save logic now writes faster and more safely under high volume.",
		"INTERNAL: Intelligent Error and Crash Handling introduced across thread contexts.",
		"INTERNAL: Refactored search logic for clarity and reliability.",
		"INTERNAL: Introduced centralized _add_to_noisy_filter() for safely updating noisy_parameters.json."
	],
	"5.3.0": [
		"NEW: Added a settings gear next to the search bar; this opens the Safety Controls Side Dock.",
		"NEW: Added reconnection logic for V3 PiShock API handling.",
		"NEW: Added retry logic for fetching devices from PiShock.",
		"NEW: Added Emergency Stop button inside the side dock to forcefully terminate the app.",
		"NEW: Implemented Pause All Devices button logic (button currently hidden pending API support from PiShock team).",
		"FIX: Improved Chain Editor UI contrast to better indicate selected vs unselected devices.",
		"FIX: Devices without 'code' are now handled properly if 'shockerId' is present.",
		"FIX: Redis connection errors are now internally retried until stabilized.",
		"INTERNAL: Simplified _send_publish_command logic.",
		"INTERNAL: Removed legacy IP regex logic from _send_simple.",
		"INTERNAL: Centralized versioning in dashboard.py via __version__.",
		"INTERNAL: Version bumped to 5.3.0."
	],
	"5.2.2": [
		"NEW: Added 'Special' mode to the toolbar dropdown with dedicated buttons for 'Changelog' and 'üíñ Support Me'.",
		"NEW: Introduced LICENSE_TIER global parsed from Gumroad 'variants' (Bronze, Silver, Gold).",
		"NEW: Personalized license popup messages based on supporter tier with emojis and custom text.",
		"NEW: LICENSE_TIER now drives all license messaging instead of LICENSE_TYPE.",
		"NEW: Display tier-specific thank-you messages for Gold, Silver, and Bronze supporters.",
		"NEW: Added license.json first-run fallback with auto-write of free license key.",
		"NEW: Implemented is_running() method in PiShockClient to prevent duplicate thread starts.",
		"FIX: Resolved incorrect tkinter popup showing 'Free License' despite valid supporter license due to missing global LICENSE_TIER.",
		"FIX: Ensured external browser is always used for 'Support Me' link using webbrowser.open_new().",
		"FIX: Removed legacy Support button from right_tools once migrated to the 'Special' toolbar.",
		"INTERNAL: Minor UI cleanup and positioning adjustments in render_toolbar_buttons()."
	],
  "5.2.0": [
    "NEW: Deferred TikFinity action registration until after UI and OSC initialization using the _ready flag and finalize_controls().",
    "NEW: Deferred TikFinity registry cache reads and writes until after OSC parameters are loaded via load_registry_cache() and save_registry_cache().",
    "NEW: Added re_register_all_tikfinity_actions() helper to hot-reload TikFinity actions and prevent duplicate registrations.",
    "NEW: Integrated Gumroad license verification with GUMROAD_VERIFY_URL, SUPPORTER_PRODUCT_ID, and FREE_POPUP_URL constants.",
    "NEW: Implemented _check_license_valid() to validate license key (read from /saved/config/user.json) against Gumroad‚Äôs API using requests.",
    "NEW: On startup, display a ‚ÄúFree Version‚Äù popup when no valid license is found, featuring ‚ÄúBuy Supporter License‚Äù and ‚ÄúContinue (Free)‚Äù options.",
    "NEW: Extended edit_config() to include a License Key field, persisting it alongside TikTok and PiShock settings.",
    "FIX: Eliminated premature register_action() calls and config persistence by deferring both until after full initialization.",
    "INTERNAL: Adjusted edit_config() window layout to accommodate the new License Key entry.",
    "INTERNAL: Version bumped to 5.2.0"
  ],
  "5.0.0": [
    "FIX: VRChat collision issue with VRCFacetracking resolved to ensure proper parameter syncing.",
    "FIX: Migrated to a faster VRC parameter system for improved runtime performance.",
    "START: Building installer package for streamlined update deployment.",
    "FIX: Core logic for seeding default files and configs corrected for stability on first run.",
    "FIX: Addressed lockup and client crash during avatar change triggered by OSC update race condition.",
    "FIX: Core logic for Hyroe gift + Fooma Twitch integration now ensures proper detection and event registration.",
    "MIGRATED: Core logic and save operations now leverage VRC OSC Query interface for lower-latency interactions.",
    "MIGRATED: OSC logic now powered by an internal API layer for faster parsing and cleaner abstraction.",
    "MIGRATED: GUI logic improved for better async handling, faster redraws, and responsive OSC query results.",
    "MIGRATED: Save/load pipelines now operate on optimized internal data structures to cut down disk I/O.",
    "MIGRATED: Controls logic now uses unified internal sync model with the OSC bridge for stability.",
    "INVESTIGATED: Avatar parameter change detected in OSC Debug but not firing in-game. Root cause: VRChat bug. Workaround: avatar must be favorited to consistently trigger updates.",
    "FIX: Queue freeze resolved by replacing incorrect return in pump_q loop with continue, ensuring proper message handling.",
    "OPTIMIZED: Registry cache now writes only on content changes, preventing unnecessary disk I/O at startup."
  ],
  "4.8.5": [
    "NEW: Added PiShock Connection Warning for when PiShock servers encounter service issues.",
    "NEW: Added PiShock Connection Warning for user hubs failing to connect to their registered devices.",
    "NEW: Added 'Contact Support' button to PiShock error dialog, which opens the official PiShock Discord in the browser.",
    "FIX: Fixed auto-registration of Hyroe's INT/gift assets ‚Äî issue identified by YoteTheCoyote; resolved via robust file creation logic.",
    "FIX: Ensured control and chain files are pre-created and saved under /saved/<folder> before attempting auto-registration.",
    "INTERNAL: Added non-interactive create_int_series_rows() helper to bypass GUI prompts and match manual INT injection.",
    "INTERNAL: Refactored _auto_register_assets() to use real control creation logic instead of synthetic fallback.",
    "INTERNAL: Version bumped to 4.8.5"
  ],
  "4.8.0": [
    "NEW: Fuzzy name matching for Hyroe gift auto-registration ‚Äî mismatched casing or slight variations now resolve to the correct giftMapping entry, so icons and coinCosts display properly.",
    "NEW: Fallback delays for unspecified gifts in HYROE_GIFTS (defaults to 6 s) and explicit filtering of holiday specials (Ghost, Pumpkin) to prevent unwanted chains.",
    "FIX: `_auto_register_assets` now ensures `_gift_mapping` is loaded before use, eliminating silent failures when giftMapping wasn‚Äôt initialized.",
    "NEW: INT-series injection only resets on the final step (::#N), avoiding redundant resets during the chain.",
    "FIX: Robust avatar JSON path resolution in `_on_avatar_change` ‚Äî handles both legacy string entries and new-style dicts without KeyError.",
    "FIX: `send_shock_ws` now pauses all non-PUBLISH operations during a PUBLISH to avoid being flagged as malicious by the PiShock broker.",
    "FIX: Heartbeat task cancellation and reconnect back-off refined to prevent overlapping tasks and spurious disconnections.",
    "UI: Gift-chain buttons now correctly display the üéÅ icon, coinCost badge, and icon image from giftMapping.",
    "UI: Chain play buttons updated to use the new `ChainPlay.TButton` style for consistent theming.",
    "SEC: Hardened `_auto_register_assets` so that only newly added chains are persisted to disk, avoiding accidental overwrites."
  ],
  "4.5.2": [
    "NEW: One-shot save-guard ‚Üí creates timestamped backups, refuses empty / smaller lists silently, and logs at most once (no spam).",
    "FIX: AttributeErrors on capture-timeout (_finalize_capture / _save_avatar_snapshot) resolved ‚Äî timers now target valid methods.",
    "NEW: Debounced /avatar/change (1 s) + rolling-buffer pre-fill; capture finalises idempotently and marks avatar ready.",
    "NEW: Burst-safe OSC sender ‚Äî repeated hits refresh the same reset timer, so chat-spam maps cleanly in-game; INT-series unchanged.",
    "FIX: ‚Äòafter_id‚Äô UnboundLocalError squashed when multiple INT-series parameters fire in quick succession.",
    "API: /api/features/actions/exec fully rewritten ‚Äî always returns HTTP 200 with {\"data\":[]}, honours both \"context\" & legacy \"data\", sets CORS, and queues work on the Tk thread when alive.",
    "API: Internal callback errors are logged but never bubble up, eliminating TikFinity‚Äôs 500-error flood and queue bloat.",
    "UI: Guard / API errors now emit a single, colour-coded log-line per incident instead of endless repeats.",
    "SEC: Flask handler no longer returns (Response,int) tuple ‚Äî fixes NameError and adheres to WSGI expectations."
  ],
  "4.5.1": [
    "NEW: Drop-in PiShock-v2 connector built around the official broker spec (PUBLISH / SUBSCRIBE) ‚Äî no legacy code paths.",
    "NEW: Automatic 25-second heartbeat (PING) keeps the WS session alive through broker idle-timeouts.",
    "NEW: Self-healing reconnect loop with exponential back-off-+-random-jitter (5-‚Üí-60-s).",
    "NEW: Graceful downgrade to *-log-only channels when Redis ping fan-out fails, so logs still stream while ops queue recovers.",
    "FIX: PUBLISH payload now mirrors the NodeJS reference exactly (nested list removed, integers not strings).",
    "NEW: Device discovery writes a de-duplicated list to saved/config/devices/devices.json and re-uses it on startup.",
    "FIX: Pathing re-wired to global constants (USER_CFG_FILE,¬†PISHOCK_DEVICE_FILE, etc.) eliminating hard-coded strings.",
    "UI: Live PiShock event log shows success / error feedback with timestamps and coloured badges.",
    "INT: Queue heartbeat to GUI thread (‚Äòconnected‚Äô / ‚Äòdisconnected‚Äô) so status LED never desynchronises.",
    "API: TLS context enforced on websockets.connect ‚Üí prevents MITM/downgrade attacks and meets PiShock security guidance."
  ],
  "4.0.0": [
    "NEW: Event dispatch queue for TikFinity to decouple UI thread logic",
    "NEW: Priority queue for gift chain execution (via `priority` field)",
    "NEW: Fuzzy gift matching and preview icons via AutoCompleteCombobox",
    "NEW: Added New UI Element Called Changelog, this reads this very text!",
    "FIX: Accurate \"Connected\" event status for TikFinity socket (q.put fixed)",
    "NEW: TikFinity gift handler merged with OSC chain trigger",
    "FIX: Gift chain buttons now render properly in UI",
    "UI: Added changelog window with scrollback",
    "INT: Code Cleanup performed to reduce load and stress on app",
    "API: New Dedicated Listeners for Tikfinity Events"
  ],
  "3.8.5": [
    "FIX: Prevented creation of empty chains (blank name or no steps)",
    "FIX: Avoid UnboundLocalError in `_register_chain` for \"random\" trigger",
    "FIX: Enforced `::#` integer cast logic during OSC dispatch",
    "FIX: Respects `random` mode when executing chain (now shuffles properly)",
    "FIX: Ensures `random` is registered with correct delay_min/delay_max logic",
    "INT: `random` module import added to prevent crash on shuffle",
    "LOG: Enhanced debug output for chain execution paths"
  ],
  "3.8.2": [
    "FIX: Deferred TikFinity re-register now waits for avatar load completion",
    "FIX: Added missing _save_avatar_capture_log() method to prevent crash",
    "FIX: Prevent duplicate or premature TikFinity action executions",
    "INT: Internal _avatar_ready flag and queue event now synced reliably",
    "INT: Radial layout regeneration logic improved with stable path hashing",
    "LOG: TikFinity action registration now confirmed with console prints"
  ],
  "3.8.1": [
    "FIX: Layouts now correctly saved to controls_<avatar_id>.json",
    "FIX: Ensures self.avatar_id and config stay in sync during save/load",
    "FIX: Auto-load of saved layouts now restores INT-series rows reliably",
    "FIX: Logging added to confirm saved/loaded control file paths",
    "FIX: WebSocket event logging hardened for unknown TikFinity event types",
    "INT: Improved TikFinity registration logic: unique actions, grouped UI",
    "INT: Row builder assigns full address for action IDs to preserve uniqueness"
  ],
  "3.8.0": [
    "INT: Live parameter capture now auto-triggers on avatar change",
    "ADD: Per-avatar snapshot (<id>.json) and current pointer file added",
    "ADD: Radial support: radials/controls_<id>.json with hash detection",
    "ADD: Chains can now load per avatar and execute in serial mode",
    "FIX: UI crash on missing config folders",
    "FIX: Avatar change no longer causes double-loading or layout overwrite",
    "FIX: VRChat‚Äôs noisy parameters (Voice, VRMode, etc.) now ignored on capture",
    "UIX: Improved OSC status & avatar load feedback in status bar"
  ],
  "3.7.0": [
    "Avatar JSON auto-load now re-generates radial layout correctly",
    "INT-series parameters now reset using correct base OSC address",
    "Timer reset logic now respects INT-series row mapping",
    "TikFinity gift actions no longer register twice on reload",
    "Robust fallback if avatar JSON has missing or invalid ID",
    "Auto-loaded avatars now correctly trigger snapshot + radial logic",
    "Graceful handling of broken or missing radial layout files",
    "WebSocket reconnect stability improved (TikFinity + gift server)",
    "UI layout behavior in dark mode refined (hover, scrollbar, combobox)",
    "FIX: Processes now terminate correctly when closing the client",
    "FIX: INT Series delete button no longer deletes chains",
    "NEW: Autodetection + avatar prompt for unknown avatar imports",
    "NEW: Simplified tutorial and onboarding steps",
    "INT: Radial layout deduplication with hash prefilter"
  ],
  "3.6.2.1": [
    "FIX: TikFinity new chains not registering"
  ],
  "3.6.1": [
    "FIX: Critical thread allocation issue fixed",
    "FIX: Offline chain button logic corrected"
  ],
  "3.6.0": [
    "NEW: Priority system for chains (lower = sooner)",
    "NEW: Easy Mode radial editor (UI shell only)",
    "NEW: Gift trigger WebSocket listener (local)",
    "NEW: Coin count based gift threshold triggers",
    "NEW: Radial menu auto-generation from avatar JSON",
    "NEW: Auto-load last used avatar snapshot",
    "NEW: Avatar snapshot and layout save/load support",
    "NEW: Gift image and coin cost in UI (via TikTok CDN)",
    "NEW: /saved/ storage for all user data",
    "FIX: Dark theme hover highlight improved",
    "FIX: Duplicate TikFinity action registration blocked",
    "FIX: Graceful handling of broken giftMapping.json",
    "FIX: Chain delay/step spacing bug fixed",
    "FIX: Capture logs can now be saved pre/post avatar change",
    "NEW: Unified control UI with trigger mode support"
  ]
}